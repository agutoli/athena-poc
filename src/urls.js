module.exports = {
  "/_bulk":[
    "bulk",
    [
      "POST",
      "PUT"
    ],
    {
      "index":{
        "type":"string",
        "description":"Default index for items which don't provide one"
      },
      "type":{
        "type":"string",
        "description":"Default document type for items which don't provide one"
      }
    }
  ],
  "/{index}/_bulk":[
    "bulk",
    [
      "POST",
      "PUT"
    ],
    {
      "index":{
        "type":"string",
        "description":"Default index for items which don't provide one"
      },
      "type":{
        "type":"string",
        "description":"Default document type for items which don't provide one"
      }
    }
  ],
  "/{index}/{type}/_bulk":[
    "bulk",
    [
      "POST",
      "PUT"
    ],
    {
      "index":{
        "type":"string",
        "description":"Default index for items which don't provide one"
      },
      "type":{
        "type":"string",
        "description":"Default document type for items which don't provide one"
      }
    }
  ],
  "/_cat/aliases":[
    "cat.aliases",
    [
      "GET"
    ],
    {
      "name":{
        "type":"list",
        "description":"A comma-separated list of alias names to return"
      }
    }
  ],
  "/_cat/aliases/{name}":[
    "cat.aliases",
    [
      "GET"
    ],
    {
      "name":{
        "type":"list",
        "description":"A comma-separated list of alias names to return"
      }
    }
  ],
  "/_cat/allocation":[
    "cat.allocation",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information"
      }
    }
  ],
  "/_cat/allocation/{node_id}":[
    "cat.allocation",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information"
      }
    }
  ],
  "/_cat/count":[
    "cat.count",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/count/{index}":[
    "cat.count",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/fielddata":[
    "cat.fielddata",
    [
      "GET"
    ],
    {
      "fields":{
        "type":"list",
        "description":"A comma-separated list of fields to return the fielddata size"
      }
    }
  ],
  "/_cat/fielddata/{fields}":[
    "cat.fielddata",
    [
      "GET"
    ],
    {
      "fields":{
        "type":"list",
        "description":"A comma-separated list of fields to return the fielddata size"
      }
    }
  ],
  "/_cat/health":[
    "cat.health",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat":[
    "cat.help",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat/indices":[
    "cat.indices",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/indices/{index}":[
    "cat.indices",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/master":[
    "cat.master",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat/nodeattrs":[
    "cat.nodeattrs",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat/nodes":[
    "cat.nodes",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat/pending_tasks":[
    "cat.pending_tasks",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat/plugins":[
    "cat.plugins",
    [
      "GET"
    ],
    null
  ],
  "/_cat/recovery":[
    "cat.recovery",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/recovery/{index}":[
    "cat.recovery",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/repositories":[
    "cat.repositories",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat/segments":[
    "cat.segments",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/segments/{index}":[
    "cat.segments",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/shards":[
    "cat.shards",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/shards/{index}":[
    "cat.shards",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to limit the returned information"
      }
    }
  ],
  "/_cat/snapshots":[
    "cat.snapshots",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"list",
        "description":"Name of repository from which to fetch the snapshot information"
      }
    }
  ],
  "/_cat/snapshots/{repository}":[
    "cat.snapshots",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"list",
        "description":"Name of repository from which to fetch the snapshot information"
      }
    }
  ],
  "/_cat/tasks":[
    "cat.tasks",
    [
      "GET"
    ],
    {

    }
  ],
  "/_cat/templates":[
    "cat.templates",
    [
      "GET"
    ],
    {
      "name":{
        "type":"string",
        "description":"A pattern that returned template names must match"
      }
    }
  ],
  "/_cat/templates/{name}":[
    "cat.templates",
    [
      "GET"
    ],
    {
      "name":{
        "type":"string",
        "description":"A pattern that returned template names must match"
      }
    }
  ],
  "/_cat/thread_pool":[
    "cat.thread_pool",
    [
      "GET"
    ],
    {
      "thread_pool_patterns":{
        "type":"list",
        "description":"A comma-separated list of regular-expressions to filter the thread pools in the output"
      }
    }
  ],
  "/_cat/thread_pool/{thread_pool_patterns}":[
    "cat.thread_pool",
    [
      "GET"
    ],
    {
      "thread_pool_patterns":{
        "type":"list",
        "description":"A comma-separated list of regular-expressions to filter the thread pools in the output"
      }
    }
  ],
  "/_search/scroll/{scroll_id}":[
    "scroll",
    [
      "GET",
      "POST"
    ],
    {
      "scroll_id":{
        "type":"string",
        "description":"The scroll ID"
      }
    }
  ],
  "/_search/scroll":[
    "scroll",
    [
      "GET",
      "POST"
    ],
    {
      "scroll_id":{
        "type":"string",
        "description":"The scroll ID"
      }
    }
  ],
  "/_cluster/allocation/explain":[
    "cluster.allocation_explain",
    [
      "GET",
      "POST"
    ],
    {

    }
  ],
  "/_cluster/settings":[
    "cluster.put_settings",
    [
      "PUT"
    ],
    {

    }
  ],
  "/_cluster/health":[
    "cluster.health",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"Limit the information returned to a specific index"
      }
    }
  ],
  "/_cluster/health/{index}":[
    "cluster.health",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"Limit the information returned to a specific index"
      }
    }
  ],
  "/_cluster/pending_tasks":[
    "cluster.pending_tasks",
    [
      "GET"
    ],
    {

    }
  ],
  "/_remote/info":[
    "cluster.remote_info",
    [
      "GET"
    ],
    null
  ],
  "/_cluster/reroute":[
    "cluster.reroute",
    [
      "POST"
    ],
    {

    }
  ],
  "/_cluster/state":[
    "cluster.state",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "blocks",
          "metadata",
          "nodes",
          "routing_table",
          "routing_nodes",
          "master_node",
          "version"
        ],
        "description":"Limit the information returned to the specified metrics"
      }
    }
  ],
  "/_cluster/state/{metric}":[
    "cluster.state",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "blocks",
          "metadata",
          "nodes",
          "routing_table",
          "routing_nodes",
          "master_node",
          "version"
        ],
        "description":"Limit the information returned to the specified metrics"
      }
    }
  ],
  "/_cluster/state/{metric}/{index}":[
    "cluster.state",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "blocks",
          "metadata",
          "nodes",
          "routing_table",
          "routing_nodes",
          "master_node",
          "version"
        ],
        "description":"Limit the information returned to the specified metrics"
      }
    }
  ],
  "/_cluster/stats":[
    "cluster.stats",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_cluster/stats/nodes/{node_id}":[
    "cluster.stats",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_count":[
    "count",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of indices to restrict the results"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of types to restrict the results"
      }
    }
  ],
  "/{index}/_count":[
    "count",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of indices to restrict the results"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of types to restrict the results"
      }
    }
  ],
  "/{index}/{type}/_count":[
    "count",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of indices to restrict the results"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of types to restrict the results"
      }
    }
  ],
  "/{index}/{type}/{id}/_create":[
    "create",
    [
      "PUT",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "required":true,
        "description":"Document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "required":true,
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/{type}/{id}":[
    "index",
    [
      "POST",
      "PUT"
    ],
    {
      "id":{
        "type":"string",
        "description":"Document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/_doc/{id}":[
    "index",
    [
      "POST",
      "PUT"
    ],
    {
      "id":{
        "type":"string",
        "description":"Document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/_delete_by_query":[
    "delete_by_query",
    [
      "POST"
    ],
    {
      "index":{
        "required":true,
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/{type}/_delete_by_query":[
    "delete_by_query",
    [
      "POST"
    ],
    {
      "index":{
        "required":true,
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/_scripts/{id}":[
    "put_script",
    [
      "PUT",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "description":"Script ID",
        "required":true
      },
      "context":{
        "type":"string",
        "description":"Script context"
      }
    }
  ],
  "/{index}/{type}/{id}/_source":[
    "get_source",
    [
      "GET"
    ],
    {
      "id":{
        "type":"string",
        "required":true,
        "description":"The document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "required":true,
        "description":"The type of the document; use `_all` to fetch the first document matching the ID across all types"
      }
    }
  ],
  "/{index}/{type}/{id}/_explain":[
    "explain",
    [
      "GET",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "required":true,
        "description":"The document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "required":true,
        "description":"The type of the document"
      }
    }
  ],
  "/_field_caps":[
    "field_caps",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_field_caps":[
    "field_caps",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/{type}":[
    "index",
    [
      "POST",
      "PUT"
    ],
    {
      "id":{
        "type":"string",
        "description":"Document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/_doc":[
    "index",
    [
      "POST",
      "PUT"
    ],
    {
      "id":{
        "type":"string",
        "description":"Document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/_analyze":[
    "indices.analyze",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The name of the index to scope the operation"
      }
    }
  ],
  "/{index}/_analyze":[
    "indices.analyze",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The name of the index to scope the operation"
      }
    }
  ],
  "/_cache/clear":[
    "indices.clear_cache",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index name to limit the operation"
      }
    }
  ],
  "/{index}/_cache/clear":[
    "indices.clear_cache",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index name to limit the operation"
      }
    }
  ],
  "/{index}/_close":[
    "indices.close",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "required":true,
        "description":"A comma separated list of indices to close"
      }
    }
  ],
  "/{index}":[
    "indices.get",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "required":true,
        "description":"A comma-separated list of index names"
      }
    }
  ],
  "/{index}/_alias/{name}":[
    "indices.put_alias",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "required":true,
        "description":"A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices."
      },
      "name":{
        "type":"string",
        "required":true,
        "description":"The name of the alias to be created or updated"
      }
    }
  ],
  "/{index}/_aliases/{name}":[
    "indices.put_alias",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "required":true,
        "description":"A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices."
      },
      "name":{
        "type":"string",
        "required":true,
        "description":"The name of the alias to be created or updated"
      }
    }
  ],
  "/_template/{name}":[
    "indices.put_template",
    [
      "PUT",
      "POST"
    ],
    {
      "name":{
        "type":"string",
        "required":true,
        "description":"The name of the template"
      }
    }
  ],
  "/_alias/{name}":[
    "indices.get_alias",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to filter aliases"
      },
      "name":{
        "type":"list",
        "description":"A comma-separated list of alias names to return"
      }
    }
  ],
  "/{index}/_mapping/{type}":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "/_flush":[
    "indices.flush",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string for all indices"
      }
    }
  ],
  "/{index}/_flush":[
    "indices.flush",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string for all indices"
      }
    }
  ],
  "/_flush/synced":[
    "indices.flush_synced",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string for all indices"
      }
    }
  ],
  "/{index}/_flush/synced":[
    "indices.flush_synced",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string for all indices"
      }
    }
  ],
  "/_forcemerge":[
    "indices.forcemerge",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_forcemerge":[
    "indices.forcemerge",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/_alias":[
    "indices.get_alias",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to filter aliases"
      },
      "name":{
        "type":"list",
        "description":"A comma-separated list of alias names to return"
      }
    }
  ],
  "/{index}/_alias":[
    "indices.get_alias",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to filter aliases"
      },
      "name":{
        "type":"list",
        "description":"A comma-separated list of alias names to return"
      }
    }
  ],
  "/_mapping/field/{fields}":[
    "indices.get_field_mapping",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types"
      },
      "fields":{
        "type":"list",
        "description":"A comma-separated list of fields",
        "required":true
      }
    }
  ],
  "/{index}/_mapping/field/{fields}":[
    "indices.get_field_mapping",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types"
      },
      "fields":{
        "type":"list",
        "description":"A comma-separated list of fields",
        "required":true
      }
    }
  ],
  "/_mapping/{type}/field/{fields}":[
    "indices.get_field_mapping",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types"
      },
      "fields":{
        "type":"list",
        "description":"A comma-separated list of fields",
        "required":true
      }
    }
  ],
  "/{index}/_mapping/{type}/field/{fields}":[
    "indices.get_field_mapping",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types"
      },
      "fields":{
        "type":"list",
        "description":"A comma-separated list of fields",
        "required":true
      }
    }
  ],
  "/_mapping":[
    "indices.get_mapping",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types"
      }
    }
  ],
  "/{index}/_mapping":[
    "indices.get_mapping",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types"
      }
    }
  ],
  "/_mapping/{type}":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "/_settings":[
    "indices.put_settings",
    [
      "PUT"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_settings":[
    "indices.put_settings",
    [
      "PUT"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_settings/{name}":[
    "indices.get_settings",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "name":{
        "type":"list",
        "description":"The name of the settings that should be included"
      }
    }
  ],
  "/_settings/{name}":[
    "indices.get_settings",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "name":{
        "type":"list",
        "description":"The name of the settings that should be included"
      }
    }
  ],
  "/_template":[
    "indices.get_template",
    [
      "GET"
    ],
    {
      "name":{
        "type":"list",
        "required":false,
        "description":"The comma separated names of the index templates"
      }
    }
  ],
  "/_upgrade":[
    "indices.upgrade",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_upgrade":[
    "indices.upgrade",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_open":[
    "indices.open",
    [
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "required":true,
        "description":"A comma separated list of indices to open"
      }
    }
  ],
  "/{index}/{type}/_mapping":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "/{index}/{type}/_mappings":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "/{index}/_mappings/{type}":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "/_mappings/{type}":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "{index}/_mappings":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "{index}/_mapping":[
    "indices.put_mapping",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices."
      },
      "type":{
        "type":"string",
        "description":"The name of the document type"
      }
    }
  ],
  "/_recovery":[
    "indices.recovery",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_recovery":[
    "indices.recovery",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/_refresh":[
    "indices.refresh",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_refresh":[
    "indices.refresh",
    [
      "POST",
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{alias}/_rollover":[
    "indices.rollover",
    [
      "POST"
    ],
    {
      "alias":{
        "type":"string",
        "required":true,
        "description":"The name of the alias to rollover"
      },
      "new_index":{
        "type":"string",
        "required":false,
        "description":"The name of the rollover index"
      }
    }
  ],
  "/{alias}/_rollover/{new_index}":[
    "indices.rollover",
    [
      "POST"
    ],
    {
      "alias":{
        "type":"string",
        "required":true,
        "description":"The name of the alias to rollover"
      },
      "new_index":{
        "type":"string",
        "required":false,
        "description":"The name of the rollover index"
      }
    }
  ],
  "/_segments":[
    "indices.segments",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_segments":[
    "indices.segments",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/_shard_stores":[
    "indices.shard_stores",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_shard_stores":[
    "indices.shard_stores",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_shrink/{target}":[
    "indices.shrink",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the source index to shrink"
      },
      "target":{
        "type":"string",
        "required":true,
        "description":"The name of the target index to shrink into"
      }
    }
  ],
  "/{index}/_split/{target}":[
    "indices.split",
    [
      "PUT",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the source index to split"
      },
      "target":{
        "type":"string",
        "required":true,
        "description":"The name of the target index to split into"
      }
    }
  ],
  "/_stats":[
    "indices.stats",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned the specific metrics."
      }
    }
  ],
  "/_stats/{metric}":[
    "indices.stats",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned the specific metrics."
      }
    }
  ],
  "/{index}/_stats":[
    "indices.stats",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned the specific metrics."
      }
    }
  ],
  "/{index}/_stats/{metric}":[
    "indices.stats",
    [
      "GET"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names; use `_all` or empty string to perform the operation on all indices"
      },
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned the specific metrics."
      }
    }
  ],
  "/_aliases":[
    "indices.update_aliases",
    [
      "POST"
    ],
    {

    }
  ],
  "/_validate/query":[
    "indices.validate_query",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/_validate/query":[
    "indices.validate_query",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/{type}/_validate/query":[
    "indices.validate_query",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to restrict the operation; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types"
      }
    }
  ],
  "/":[
    "ping",
    [
      "HEAD"
    ],
    {

    }
  ],
  "/_ingest/pipeline/{id}":[
    "ingest.put_pipeline",
    [
      "PUT"
    ],
    {
      "id":{
        "type":"string",
        "description":"Pipeline ID",
        "required":true
      }
    }
  ],
  "/_ingest/pipeline":[
    "ingest.get_pipeline",
    [
      "GET"
    ],
    {
      "id":{
        "type":"string",
        "description":"Comma separated list of pipeline ids. Wildcards supported"
      }
    }
  ],
  "/_ingest/processor/grok":[
    "ingest.processor_grok",
    [
      "GET"
    ],
    {

    }
  ],
  "/_ingest/pipeline/_simulate":[
    "ingest.simulate",
    [
      "GET",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "description":"Pipeline ID",
        "required":false
      }
    }
  ],
  "/_ingest/pipeline/{id}/_simulate":[
    "ingest.simulate",
    [
      "GET",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "description":"Pipeline ID",
        "required":false
      }
    }
  ],
  "/_mget":[
    "mget",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/_mget":[
    "mget",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/{type}/_mget":[
    "mget",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/_msearch":[
    "msearch",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to use as default"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to use as default"
      }
    }
  ],
  "/{index}/_msearch":[
    "msearch",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to use as default"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to use as default"
      }
    }
  ],
  "/{index}/{type}/_msearch":[
    "msearch",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to use as default"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to use as default"
      }
    }
  ],
  "/_msearch/template":[
    "msearch_template",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to use as default"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to use as default"
      }
    }
  ],
  "/{index}/_msearch/template":[
    "msearch_template",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to use as default"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to use as default"
      }
    }
  ],
  "/{index}/{type}/_msearch/template":[
    "msearch_template",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to use as default"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to use as default"
      }
    }
  ],
  "/_mtermvectors":[
    "mtermvectors",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The index in which the document resides."
      },
      "type":{
        "type":"string",
        "description":"The type of the document."
      }
    }
  ],
  "/{index}/_mtermvectors":[
    "mtermvectors",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The index in which the document resides."
      },
      "type":{
        "type":"string",
        "description":"The type of the document."
      }
    }
  ],
  "/{index}/{type}/_mtermvectors":[
    "mtermvectors",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The index in which the document resides."
      },
      "type":{
        "type":"string",
        "description":"The type of the document."
      }
    }
  ],
  "/_cluster/nodes/hotthreads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_cluster/nodes/hot_threads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_cluster/nodes/{node_id}/hotthreads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_cluster/nodes/{node_id}/hot_threads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/hotthreads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/hot_threads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/{node_id}/hotthreads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/{node_id}/hot_threads":[
    "nodes.hot_threads",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes":[
    "nodes.info",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      },
      "metric":{
        "type":"list",
        "options":[
          "settings",
          "os",
          "process",
          "jvm",
          "thread_pool",
          "transport",
          "http",
          "plugins",
          "ingest"
        ],
        "description":"A comma-separated list of metrics you wish returned. Leave empty to return all."
      }
    }
  ],
  "/_nodes/{node_id}":[
    "nodes.info",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      },
      "metric":{
        "type":"list",
        "options":[
          "settings",
          "os",
          "process",
          "jvm",
          "thread_pool",
          "transport",
          "http",
          "plugins",
          "ingest"
        ],
        "description":"A comma-separated list of metrics you wish returned. Leave empty to return all."
      }
    }
  ],
  "/_nodes/{metric}":[
    "nodes.info",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      },
      "metric":{
        "type":"list",
        "options":[
          "settings",
          "os",
          "process",
          "jvm",
          "thread_pool",
          "transport",
          "http",
          "plugins",
          "ingest"
        ],
        "description":"A comma-separated list of metrics you wish returned. Leave empty to return all."
      }
    }
  ],
  "/_nodes/{node_id}/{metric}":[
    "nodes.info",
    [
      "GET"
    ],
    {
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      },
      "metric":{
        "type":"list",
        "options":[
          "settings",
          "os",
          "process",
          "jvm",
          "thread_pool",
          "transport",
          "http",
          "plugins",
          "ingest"
        ],
        "description":"A comma-separated list of metrics you wish returned. Leave empty to return all."
      }
    }
  ],
  "/_nodes/stats":[
    "nodes.stats",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "breaker",
          "fs",
          "http",
          "indices",
          "jvm",
          "os",
          "process",
          "thread_pool",
          "transport",
          "discovery"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "index_metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/{node_id}/stats":[
    "nodes.stats",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "breaker",
          "fs",
          "http",
          "indices",
          "jvm",
          "os",
          "process",
          "thread_pool",
          "transport",
          "discovery"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "index_metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/stats/{metric}":[
    "nodes.stats",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "breaker",
          "fs",
          "http",
          "indices",
          "jvm",
          "os",
          "process",
          "thread_pool",
          "transport",
          "discovery"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "index_metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/{node_id}/stats/{metric}":[
    "nodes.stats",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "breaker",
          "fs",
          "http",
          "indices",
          "jvm",
          "os",
          "process",
          "thread_pool",
          "transport",
          "discovery"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "index_metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/stats/{metric}/{index_metric}":[
    "nodes.stats",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "breaker",
          "fs",
          "http",
          "indices",
          "jvm",
          "os",
          "process",
          "thread_pool",
          "transport",
          "discovery"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "index_metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/{node_id}/stats/{metric}/{index_metric}":[
    "nodes.stats",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "breaker",
          "fs",
          "http",
          "indices",
          "jvm",
          "os",
          "process",
          "thread_pool",
          "transport",
          "discovery"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "index_metric":{
        "type":"list",
        "options":[
          "_all",
          "completion",
          "docs",
          "fielddata",
          "query_cache",
          "flush",
          "get",
          "indexing",
          "merge",
          "request_cache",
          "refresh",
          "search",
          "segments",
          "store",
          "warmer",
          "suggest"
        ],
        "description":"Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified."
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/usage":[
    "nodes.usage",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "rest_actions"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/{node_id}/usage":[
    "nodes.usage",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "rest_actions"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/usage/{metric}":[
    "nodes.usage",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "rest_actions"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_nodes/{node_id}/usage/{metric}":[
    "nodes.usage",
    [
      "GET"
    ],
    {
      "metric":{
        "type":"list",
        "options":[
          "_all",
          "rest_actions"
        ],
        "description":"Limit the information returned to the specified metrics"
      },
      "node_id":{
        "type":"list",
        "description":"A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes"
      }
    }
  ],
  "/_scripts/{id}/{context}":[
    "put_script",
    [
      "PUT",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "description":"Script ID",
        "required":true
      },
      "context":{
        "type":"string",
        "description":"Script context"
      }
    }
  ],
  "/_rank_eval":[
    "rank_eval",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_rank_eval":[
    "rank_eval",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/_reindex":[
    "reindex",
    [
      "POST"
    ],
    {

    }
  ],
  "/_reindex/{task_id}/_rethrottle":[
    "reindex_rethrottle",
    [
      "POST"
    ],
    {
      "task_id":{
        "type":"string",
        "required":true,
        "description":"The task id to rethrottle"
      }
    }
  ],
  "/_update_by_query/{task_id}/_rethrottle":[
    "reindex_rethrottle",
    [
      "POST"
    ],
    {
      "task_id":{
        "type":"string",
        "required":true,
        "description":"The task id to rethrottle"
      }
    }
  ],
  "/_delete_by_query/{task_id}/_rethrottle":[
    "reindex_rethrottle",
    [
      "POST"
    ],
    {
      "task_id":{
        "type":"string",
        "required":true,
        "description":"The task id to rethrottle"
      }
    }
  ],
  "/_render/template":[
    "render_search_template",
    [
      "GET",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "description":"The id of the stored search template"
      }
    }
  ],
  "/_render/template/{id}":[
    "render_search_template",
    [
      "GET",
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "description":"The id of the stored search template"
      }
    }
  ],
  "/_scripts/painless/_execute":[
    "scripts_painless_execute",
    [
      "GET",
      "POST"
    ],
    {

    }
  ],
  "/_search":[
    "search",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/_search":[
    "search",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/{type}/_search":[
    "search",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/_search_shards":[
    "search_shards",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/{index}/_search_shards":[
    "search_shards",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      }
    }
  ],
  "/_search/template":[
    "search_template",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/_search/template":[
    "search_template",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/{type}/_search/template":[
    "search_template",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/_snapshot/{repository}/{snapshot}":[
    "snapshot.get",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"string",
        "required":true,
        "description":"A repository name"
      },
      "snapshot":{
        "type":"list",
        "required":true,
        "description":"A comma-separated list of snapshot names"
      }
    }
  ],
  "/_snapshot/{repository}":[
    "snapshot.get_repository",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"list",
        "description":"A comma-separated list of repository names"
      }
    }
  ],
  "/_snapshot":[
    "snapshot.get_repository",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"list",
        "description":"A comma-separated list of repository names"
      }
    }
  ],
  "/_snapshot/{repository}/{snapshot}/_restore":[
    "snapshot.restore",
    [
      "POST"
    ],
    {
      "repository":{
        "type":"string",
        "required":true,
        "description":"A repository name"
      },
      "snapshot":{
        "type":"string",
        "required":true,
        "description":"A snapshot name"
      }
    }
  ],
  "/_snapshot/_status":[
    "snapshot.status",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"string",
        "description":"A repository name"
      },
      "snapshot":{
        "type":"list",
        "description":"A comma-separated list of snapshot names"
      }
    }
  ],
  "/_snapshot/{repository}/_status":[
    "snapshot.status",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"string",
        "description":"A repository name"
      },
      "snapshot":{
        "type":"list",
        "description":"A comma-separated list of snapshot names"
      }
    }
  ],
  "/_snapshot/{repository}/{snapshot}/_status":[
    "snapshot.status",
    [
      "GET"
    ],
    {
      "repository":{
        "type":"string",
        "description":"A repository name"
      },
      "snapshot":{
        "type":"list",
        "description":"A comma-separated list of snapshot names"
      }
    }
  ],
  "/_snapshot/{repository}/_verify":[
    "snapshot.verify_repository",
    [
      "POST"
    ],
    {
      "repository":{
        "type":"string",
        "required":true,
        "description":"A repository name"
      }
    }
  ],
  "/_status":[
    "status",
    [
      "GET"
    ],
    {

    }
  ],
  "/_tasks/_cancel":[
    "tasks.cancel",
    [
      "POST"
    ],
    {
      "task_id":{
        "type":"string",
        "description":"Cancel the task with specified task id (node_id:task_number)"
      }
    }
  ],
  "/_tasks/{task_id}/_cancel":[
    "tasks.cancel",
    [
      "POST"
    ],
    {
      "task_id":{
        "type":"string",
        "description":"Cancel the task with specified task id (node_id:task_number)"
      }
    }
  ],
  "/_tasks/{task_id}":[
    "tasks.get",
    [
      "GET"
    ],
    {
      "task_id":{
        "type":"string",
        "required":true,
        "description":"Return the task with specified id (node_id:task_number)"
      }
    }
  ],
  "/_tasks":[
    "tasks.list",
    [
      "GET"
    ],
    {

    }
  ],
  "/{index}/{type}/_termvectors":[
    "termvectors",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The index in which the document resides.",
        "required":true
      },
      "type":{
        "type":"string",
        "description":"The type of the document.",
        "required":true
      },
      "id":{
        "type":"string",
        "description":"The id of the document, when not specified a doc param should be supplied."
      }
    }
  ],
  "/{index}/{type}/{id}/_termvectors":[
    "termvectors",
    [
      "GET",
      "POST"
    ],
    {
      "index":{
        "type":"string",
        "description":"The index in which the document resides.",
        "required":true
      },
      "type":{
        "type":"string",
        "description":"The type of the document.",
        "required":true
      },
      "id":{
        "type":"string",
        "description":"The id of the document, when not specified a doc param should be supplied."
      }
    }
  ],
  "/{index}/{type}/{id}/_update":[
    "update",
    [
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "required":true,
        "description":"Document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/_doc/{id}/_update":[
    "update",
    [
      "POST"
    ],
    {
      "id":{
        "type":"string",
        "required":true,
        "description":"Document ID"
      },
      "index":{
        "type":"string",
        "required":true,
        "description":"The name of the index"
      },
      "type":{
        "type":"string",
        "description":"The type of the document"
      }
    }
  ],
  "/{index}/_update_by_query":[
    "update_by_query",
    [
      "POST"
    ],
    {
      "index":{
        "required":true,
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ],
  "/{index}/{type}/_update_by_query":[
    "update_by_query",
    [
      "POST"
    ],
    {
      "index":{
        "required":true,
        "type":"list",
        "description":"A comma-separated list of index names to search; use `_all` or empty string to perform the operation on all indices"
      },
      "type":{
        "type":"list",
        "description":"A comma-separated list of document types to search; leave empty to perform the operation on all types"
      }
    }
  ]
}
